{
    "contents" : "---\noutput: html_document\n---\n###Unzip the data\n\nunzip(\"repdata-data-activity.zip\", overwrite = T)  \n\n###Loading the data into R\n\nactivity <- read.csv(\"activity.csv\", header = T, sep = \",\")\n\n###assigning Null to the variables created below\n\necho = TRUE\ndf_summary <- NULL\nsu2 <- NULL\nsu <- NULL\nmn_int <- NULL\nactivity2 <- NULL\nmean_su2 <- NULL\nmedian_su2 <- NULL\nactivity2_weekend <- NULL\nactivity2_weekday <- NULL\nmean_activity2_weekday <- NULL\nmean_activity2_weekend <- NULL\n\n###What is mean total number of steps taken per day?\n\n###First, the total (sum) of steps is determined for every single date.\n\necho = TRUE\n\nsu <- tapply(activity$steps, activity$date, sum, na.rm=T)\n\n##Hereafter is presented a histogram of the total number of steps taken each day.\n\necho = TRUE\n\nhist(su, xlab = \"sum of steps per day\", main = \"histogram of steps per day\")\n\n###The mean and the median total number of steps taken per day are reported :\n  \necho = TRUE\n\nmean_su <- round(mean(su))\n\nmedian_su <- round(median(su))\n\nprint(c(\"The mean:\",mean_su))\n\n### [1] \"The mean:\" \"9354\"\n\nprint(c(\"The median:\",median_su))\n\n### [1] \"The median:\" \"10395\"\n\n###what is the average daily activity pattern ?\n\n###A time series plot of the 5-minute interval and the average number of steps taken (averaged across all days) is shown below:\n  \necho = TRUE\n\nmn_int <- tapply(activity$steps, activity$interval, mean, na.rm=T)\n\nplot(mn_int ~ unique(activity$interval), type=\"l\", xlab = \"5-min interval\")\n\n###The 5-minute interval that contains the maximum number of steps is the following\n\necho = TRUE\n\nmn_int[which.max(mn_int)]\n\n###835 \n###206.1698 \n\n### Assigning missing values\n\n*Note that there are a number of days/intervals where there are missing values (coded as NA). The presence of missing days may introduce bias into some calculations or summaries of the data.First, in order to visualize in which variable the NAs are:\n  \n\necho = TRUE\n\ntable(is.na(activity) == TRUE)\n\n### FALSE  TRUE \n### 50400  2304\n\nsummary(activity)\n##      steps               date          interval   \n##Min.   :  0.00   2012-10-01:  288   Min.   :   0.0  \n##1st Qu.:  0.00   2012-10-02:  288   1st Qu.: 588.8  \n##Median :  0.00   2012-10-03:  288   Median :1177.5  \n##Mean   : 37.38   2012-10-04:  288   Mean   :1177.5  \n##3rd Qu.: 12.00   2012-10-05:  288   3rd Qu.:1766.2  \n##Max.   :806.00   2012-10-06:  288   Max.   :2355.0  \n##NA's   :2304     (Other)   :15840\n\n###A total of 2304 NA's are present\n\n###Strategy for filling in all of the missing values in the dataset\n\n###The following strategy is chosen: for any NA is the step variable, the mean (of steps) of the corresponding interval is taken as the replacing value.\n\n###The 'mn_int' contains the mean for each single interval calculated over the 61 days. The right value coming from 'mn_int' is going to be used to replace the NA at the same interval.\n\necho = TRUE\n### creation of the dataset that will have no more NAs\n\nactivity2 <- activity\n\nfor (i in 1:nrow(activity)){\n  if(is.na(activity$steps[i])){\n    activity2$steps[i]<- mn_int[[as.character(activity[i, \"interval\"])]]\n  }\n}\n\n###Below is a histogram of the total number of steps taken each day. The mean and median total number of steps taken per day are reported.\n\necho = TRUE\n\nsu2 <- tapply(activity2$steps, activity2$date, sum, na.rm=T)\n\nhist(su2, xlab = \"sum of steps per day\", main = \"histogram of steps per day\")\n\nmean_su2 <- round(mean(su2))\n\nmedian_su2 <- round(median(su2))\n\n###The new values are :\n  \n  echo = TRUE\n\nprint(c(\"The mean:\",mean_su2))\n\n### [1] \"The mean:\" \"10766\"\n\nprint(c(\"The median:\",median_su2))\n\n### [1] \"The median:\" \"10766\"\n\n###In order to compare the new values with the “old” values:\n  \n  echo = TRUE\n\ndf_summary <- rbind(df_summary, data.frame(mean = c(mean_su, mean_su2), median = c(median_su, median_su2)))\n\nrownames(df_summary) <- c(\"with NA's\", \"without NA's\")\n\nprint(df_summary)\n\n###               mean median\n### with NA's     9354  10395\n### without NA's 10766  10766\n\n###For comparison with NA's and without (see earlier):\n\necho = TRUE\n\nsummary(activity2)\n##      steps               date          interval   \n##   Min.   :  0.00   2012-10-01:  288   Min.   :   0.0  \n## 1st Qu.:  0.00   2012-10-02:  288   1st Qu.: 588.8  \n## Median :  0.00   2012-10-03:  288   Median :1177.5  \n## Mean   : 37.38   2012-10-04:  288   Mean   :1177.5  \n## 3rd Qu.: 27.00   2012-10-05:  288   3rd Qu.:1766.2  \n## Max.   :806.00   2012-10-06:  288   Max.   :2355.0 \n##                  (Other)   :15840\n\n###There are No NA's now\n\n###Do we find any difference in activity patterns between weekdays and weekends?\n\n###A new column is added to the dataframe, this column will contain the factor “weekday days”“ or \"weekend days”.\n\necho = TRUE\nactivity2$weekday <- c(\"weekday\")\n\nactivity2[weekdays(as.Date(activity2[, 2])) %in% c(\"Saturday\", \"Sunday\", \"samedi\", \"dimanche\", \"saturday\", \"sunday\", \"Samedi\", \"Dimanche\"), ][4] <- c(\"weekend\")\n\ntable(activity2$weekday == \"weekend\")\n\n### FALSE  TRUE \n### 12960  4608\n\nactivity2$weekday <- factor(activity2$weekday)\n\n###In order to visualize the difference bewteen weekends and days of the week, a new dataframe is created to be usable by the lattice package. First, the data are calculated:\n\necho = TRUE\nactivity2_weekend <- subset(activity2, activity2$weekday == \"weekend\")\nactivity2_weekday <- subset(activity2, activity2$weekday == \"weekday\")\n\nmean_activity2_weekday <- tapply(activity2_weekday$steps, activity2_weekday$interval, mean)\nmean_activity2_weekend <- tapply(activity2_weekend$steps, activity2_weekend$interval, mean)\n\n###Afterwards the dataframe is prepared and the plot is… plotted !\n\necho = TRUE\nlibrary(lattice)\ndf_weekday <- NULL\ndf_weekend <- NULL\ndf_final <- NULL\ndf_weekday <- data.frame(interval = unique(activity2_weekday$interval), avg = as.numeric(mean_activity2_weekday), day = rep(\"weekday\", length(mean_activity2_weekday)))\ndf_weekend <- data.frame(interval = unique(activity2_weekend$interval), avg = as.numeric(mean_activity2_weekend), day = rep(\"weekend\", length(mean_activity2_weekend)))\ndf_final <- rbind(df_weekday, df_weekend)\n\nxyplot(avg ~ interval | day, data = df_final, layout = c(1, 2), \ntype = \"l\", ylab = \"Number of steps\")\n\n###we can notice a minor change between the period.\n",
    "created" : 1434921285463.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "94720134",
    "id" : "61903A7D",
    "lastKnownWriteTime" : 1434926473,
    "path" : "~/GitHub/Reproducible-Research/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}